{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/fashion-crown-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = userCredentials;\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match!\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"I do not have an account.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: userCredentials.displayName,\n    handleChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: userCredentials.email,\n    handleChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: userCredentials.password,\n    handleChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: userCredentials.confirmPassword,\n    handleChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    isSignUp: true,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleChange","e","name","value","target","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {connect} from \"react-redux\";\nimport {signUpStart} from \"../../redux/user/user.actions\"\nimport \"./sign-up.styles.scss\";\nconst SignUp = ({signUpStart}) => {\n\n  const [userCredentials, setUserCredentials ] = useState({\n    displayName : \"\",\n    email : \"\",\n    password : \"\",\n    confirmPassword : \"\"\n  })  \n\n  const handleChange = e => {\n    const {name, value}= e.target;\n    setUserCredentials({...userCredentials , [name] : value });\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {displayName, email, password, confirmPassword} = userCredentials;   \n    if(password !== confirmPassword){\n      alert(\"Password don't match!\")\n      return;\n    }\n    signUpStart(displayName, email, password);\n\n  } \n  return(\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account.</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput type=\"text\" name=\"displayName\" value={userCredentials.displayName} handleChange={this.handleChange} label=\"Display Name\" required/>\n        <FormInput type=\"email\" name=\"email\" value={userCredentials.email} handleChange={this.handleChange} label=\"Email\" required/>\n        <FormInput type=\"password\" name=\"password\" value={userCredentials.password} handleChange={this.handleChange} label=\"Password\" required/>\n        <FormInput type=\"password\" name=\"confirmPassword\" value={userCredentials.confirmPassword} handleChange={this.handleChange} label=\"Confirm Password\" required/>          \n        <div className=\"form-actions\">\n        <CustomButton isSignUp variant=\"contained\">Sign Up</CustomButton>\n        </div>          \n      </form>\n    </div>\n  )  \n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart : (displayName, email, password) => dispatch(signUpStart({displayName, email, password}))\n})\nexport default connect(null, mapDispatchToProps)(SignUp)\n"]},"metadata":{},"sourceType":"module"}