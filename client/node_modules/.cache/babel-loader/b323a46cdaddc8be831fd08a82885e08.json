{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyAaqHyh3yj1rjDCCmFwvsVXgBGs1K8mYdM\",\n  authDomain: \"crown-clothing-eff3a.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-eff3a.firebaseio.com\",\n  projectId: \"crown-clothing-eff3a\",\n  storageBucket: \"crown-clothing-eff3a.appspot.com\",\n  messagingSenderId: \"1050225262568\",\n  appId: \"1:1050225262568:web:97f0d283729630f766ee5d\",\n  measurementId: \"G-2TMDNMQEPC\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData,\n        createdAt: new Date()\n      });\n    } catch (error) {\n      console.log(\"error createing user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionsAndItems = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.map(collection => {\n    const {\n      title,\n      items\n    } = collection.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: collection.id,\n      title,\n      items\n    };\n  });\n  transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n  }, {});\n};\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/utils/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","photoURL","set","createdAt","Date","error","console","log","message","addCollectionsAndItems","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyAaqHyh3yj1rjDCCmFwvsVXgBGs1K8mYdM\",\n  authDomain: \"crown-clothing-eff3a.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-eff3a.firebaseio.com\",\n  projectId: \"crown-clothing-eff3a\",\n  storageBucket: \"crown-clothing-eff3a.appspot.com\",\n  messagingSenderId: \"1050225262568\",\n  appId: \"1:1050225262568:web:97f0d283729630f766ee5d\",\n  measurementId: \"G-2TMDNMQEPC\",\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { displayName, email, photoURL } = userAuth;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData,\n        createdAt: new Date(),\n      });\n    } catch (error) {\n      console.log(\"error createing user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionsAndItems = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollections = collections.map((collection) => {\n    const { title, items } = collection.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: collection.id,\n      title,\n      items,\n    };\n  });\n\n  transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n  }, {});\n};\n\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}