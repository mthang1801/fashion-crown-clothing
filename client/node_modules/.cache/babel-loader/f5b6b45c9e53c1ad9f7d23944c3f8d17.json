{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { shopActionTypes } from \"./shop.types\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../utils/firebase.util\";\nexport function* fetchCollectionsAsyncSaga() {\n  try {\n    const collectionsRef = firestore.collection();\n    const snapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot.docs);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/redux/shop/shop.saga.js"],"names":["call","put","shopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsyncSaga","collectionsRef","collection","snapshot","get","collectionsMap","docs","error","message"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,SADF,EAEEC,+BAFF,QAGO,2BAHP;AAIA,OAAO,UAAUC,yBAAV,GAAsC;AAC3C,MAAI;AACF,UAAMC,cAAc,GAAGH,SAAS,CAACI,UAAV,EAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BM,+BAD+B,EAE/BI,QAAQ,CAACG,IAFsB,CAAjC;AAIA,UAAMZ,GAAG,CAACE,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOE,KAAP,EAAc;AACd,UAAMb,GAAG,CAACG,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF","sourcesContent":["import { call, put } from \"redux-saga/effects\";\nimport { shopActionTypes } from \"./shop.types\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../utils/firebase.util\";\nexport function* fetchCollectionsAsyncSaga() {\n  try {\n    const collectionsRef = firestore.collection();\n    const snapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot.docs\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}