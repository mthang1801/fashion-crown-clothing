{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/fashion-crown-clothing/src/components/custom-button/custom-button.component.jsx\";\nimport React from 'react';\nimport \"./custom-buttom.styles.scss\";\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  isSignUp,\n  size,\n  inverted,\n  ...otherProps\n}) => {\n  let variant = otherProps.variant ? otherProps.variant : \"\";\n  let color = otherProps.color ? otherProps.color : \"\";\n  let typeForm = isGoogleSignIn ? \"google-sign-in\" : \"\";\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: `custom-button ${variant} ${color} ${typeForm} ${size ? size : \"\"} `\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default CustomButton;","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/components/custom-button/custom-button.component.jsx"],"names":["React","CustomButton","children","isGoogleSignIn","isSignUp","size","inverted","otherProps","variant","color","typeForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,cAAV;AAAyBC,EAAAA,QAAzB;AAAkCC,EAAAA,IAAlC;AAAuCC,EAAAA,QAAvC;AAAiD,KAAGC;AAApD,CAAD,KAAqE;AACxF,MAAIC,OAAO,GAAGD,UAAU,CAACC,OAAX,GAAqBD,UAAU,CAACC,OAAhC,GAA0C,EAAxD;AACA,MAAIC,KAAK,GAAIF,UAAU,CAACE,KAAX,GAAmBF,UAAU,CAACE,KAA9B,GAAsC,EAAnD;AACA,MAAIC,QAAQ,GAAGP,cAAc,GAAG,gBAAH,GAAsB,EAAnD;AAEA,sBACE;AAAQ,IAAA,SAAS,EAAG,iBAAgBK,OAAQ,IAAGC,KAAM,IAAGC,QAAS,IAAGL,IAAI,GAAGA,IAAH,GAAU,EAAG;AAArF,KAA8FE,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA2GL,QAA3G,CADF;AAGD,CARD;;AAUA,eAAeD,YAAf","sourcesContent":["import React from 'react'\nimport \"./custom-buttom.styles.scss\";\nconst CustomButton = ({children,isGoogleSignIn,isSignUp,size,inverted, ...otherProps}) => {\n  let variant = otherProps.variant ? otherProps.variant : \"\";   \n  let color  = otherProps.color ? otherProps.color : \"\";\n  let typeForm = isGoogleSignIn ? \"google-sign-in\" : \"\";\n  \n  return (\n    <button className={`custom-button ${variant} ${color} ${typeForm} ${size ? size : \"\"} `}  {...otherProps}>{children}</button>\n  )\n}\n\nexport default CustomButton\n"]},"metadata":{},"sourceType":"module"}