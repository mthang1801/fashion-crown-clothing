{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, GoogleProvider, createUserProfileDocument } from \"../../utils/firebase.util\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInStart, emailSignInFailure, emailSignInSuccess } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(googleSignInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(GoogleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmailStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(signInWithEmailStart)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/redux/user/user.saga.js"],"names":["call","put","takeLatest","all","userActionTypes","auth","GoogleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInStart","emailSignInFailure","emailSignInSuccess","getSnapshotFromUserAuth","userAuth","userRef","user","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","error","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","googleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmailStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,2BAJP;AAKA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,kBALF,QAMO,gBANP;AAQA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,QAAMC,OAAO,GAAG,MAAMf,IAAI,CAACO,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,QAAMC,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,QAAMjB,GAAG,CACPO,mBAAmB,CAAC;AAClBW,IAAAA,EAAE,EAAEF,YAAY,CAACE,EADC;AAElB,OAAGF,YAAY,CAACG,IAAb;AAFe,GAAD,CADZ,CAAT;AAMD;AACD,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACiB,eAAL,CAAqBhB,cAArB,CAAvB;AACA,UAAMN,IAAI,CAACa,uBAAD,EAA0BG,IAA1B,CAAV;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACQ,mBAAmB,CAACc,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMb,OAAO,GAAG,MAAMf,IAAI,CAACO,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMC,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACPW,kBAAkB,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGD,GAPD,CAOE,OAAOG,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACU,kBAAkB,CAACY,KAAK,CAACC,OAAP,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,iBAAV,GAA8B;AACnC,QAAM5B,UAAU,CAACE,eAAe,CAAC2B,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,oBAAV,GAAiC;AACtC,QAAM9B,UAAU,CAACE,eAAe,CAAC6B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM/B,GAAG,CAAC,CAACH,IAAI,CAAC8B,iBAAD,CAAL,EAA0B9B,IAAI,CAACgC,oBAAD,CAA9B,CAAD,CAAT;AACD","sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport {\n  auth,\n  GoogleProvider,\n  createUserProfileDocument,\n} from \"../../utils/firebase.util\";\nimport {\n  googleSignInSuccess,\n  googleSignInFailure,\n  emailSignInStart,\n  emailSignInFailure,\n  emailSignInSuccess,\n} from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(\n    googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data(),\n    })\n  );\n}\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(GoogleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\n\nexport function* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmailStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(signInWithEmailStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}