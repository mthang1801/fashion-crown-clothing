{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/fashion-crown-clothing/client/src/hoc/with-spinner/with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n\nconst WithSpinner = WrappedComponent => {\n  console.log({\n    isLoading\n  });\n\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 22\n      }\n    })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/client/src/hoc/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","console","log","isLoading","Spinner","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,uBAA/C;;AACA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,IAAAA;AAAD,GAAZ;;AACA,QAAMC,OAAO,GAAG,CAAC;AAACD,IAAAA,SAAD;AAAY,OAAGE;AAAf,GAAD,KAAgC;AAChDF,IAAAA,SAAS,gBACN,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADM,gBAGP,oBAAC,gBAAD,oBAAsBE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF;AAIC,GALD;;AAOA,SAAOD,OAAP;AACD,CAVD;;AAWA,eAAeL,WAAf","sourcesContent":["import React from 'react'\nimport {SpinnerOverlay, SpinnerContainer} from \"./with-spinner.styles\";\nconst WithSpinner = (WrappedComponent) => {\n  console.log({isLoading})\n  const Spinner = ({isLoading, ...otherProps}) => {  \n  isLoading ? \n    (<SpinnerOverlay><SpinnerContainer/></SpinnerOverlay>) \n    : \n    <WrappedComponent {...otherProps}/> \n  }\n  \n  return Spinner;\n}\nexport default WithSpinner\n"]},"metadata":{},"sourceType":"module"}