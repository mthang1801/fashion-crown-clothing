{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/fashion-crown-clothing/src/pages/shop/shop.conponent.jsx\";\nimport React from 'react';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { Route } from \"react-router-dom\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../utils/firebase.util\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionsLoading } from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionStartAsync } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../hoc/with-spinner/with-spinner.component\";\nimport \"./shop.styles.scss\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubcribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${this.props.match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `/shop/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoading: selectCollectionsLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/pages/shop/shop.conponent.jsx"],"names":["React","CollectionsOverview","CollectionPage","Route","firestore","convertCollectionsSnapshotToMap","createStructuredSelector","selectCollectionsLoading","fetchCollectionStartAsync","connect","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubcribeFromSnapshot","componentDidMount","render","loading","state","props","match","path","mapStateToProps","isCollectionsLoading","mapDispatchToProps","dispatch","fetchCollectionsStartAsync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,2BAAzD;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,wBAAR,QAAuC,gCAAvC;AACA,SAAQC,yBAAR,QAAwC,+BAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAO,oBAAP;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACT,mBAAD,CAAlD;AACA,MAAMW,yBAAyB,GAAGF,WAAW,CAACR,cAAD,CAA7C;;AACA,MAAMW,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,sBADqC,GACZ,IADY;AAAA;;AAErCC,EAAAA,iBAAiB,GAAE;AACjBR,IAAAA,yBAAyB;AAC1B;;AACDS,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAK,EAA5C;AAA+C,MAAA,MAAM,EAAEF,KAAK,iBAAI,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEF;AAA3C,SAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,qBAAd;AAAoC,MAAA,MAAM,EAAEA,KAAK,iBAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEF;AAAtC,SAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAboC;;AAiBvC,MAAMG,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CkB,EAAAA,oBAAoB,EAAGjB;AADwB,CAAD,CAAhD;;AAIA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,0BAA0B,EAAG,MAAMD,QAAQ,CAACC,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {Route} from \"react-router-dom\";\nimport {firestore, convertCollectionsSnapshotToMap} from \"../../utils/firebase.util\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCollectionsLoading} from \"../../redux/shop/shop.selector\";\nimport {fetchCollectionStartAsync} from \"../../redux/shop/shop.actions\";\nimport {connect} from \"react-redux\";\nimport WithSpinner from \"../../hoc/with-spinner/with-spinner.component\";\nimport \"./shop.styles.scss\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component {    \n  unsubcribeFromSnapshot = null ; \n  componentDidMount(){\n    fetchCollectionStartAsync()\n  }\n  render(){\n    const {loading} = this.state;\n    return(\n      <div className=\"shop-page\">\n        <Route exact path={`${this.props.match.path}`} render={props => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>}/>\n        <Route path={`/shop/:collectionId`} render={props => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\n      </div>  \n    )  \n  }\n  \n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoading : selectCollectionsLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync : () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}