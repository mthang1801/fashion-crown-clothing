{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/fashion-crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signInWithGoogle } from \"../../utils/firebase.util\";\nimport { auth } from \"../../utils/firebase.util\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./sign-in.styles.scss\";\nimport Spinner from \"../spinner/spinner.component\";\n\nconst SignIn = ({\n  googleSignInStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setUserCredentials({ ...userCredentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailSignInStart\n    } = props;\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"I have already an account.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Sign in with your email and password.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: userCredentials.email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: userCredentials.password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    variant: \"contained\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \" \", \" Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(SignIn));","map":{"version":3,"sources":["/home/mvt/Desktop/github/fashion-crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","signInWithGoogle","auth","googleSignInStart","emailSignInStart","connect","withRouter","Spinner","SignIn","userCredentials","setUserCredentials","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {signInWithGoogle} from \"../../utils/firebase.util\";\nimport {auth} from \"../../utils/firebase.util\";\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user.actions\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./sign-in.styles.scss\";\nimport Spinner from \"../spinner/spinner.component\";\nconst SignIn = ({googleSignInStart}) =>  {\n  const [userCredentials, setUserCredentials] = useState({email : \"\", password : \"\"});\n  \n  const handleChange = (e) => {\n   setUserCredentials({...userCredentials, [e.target.name] : e.target.value})\n  }\n\n \n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {emailSignInStart} = props;\n    const {email, password} = userCredentials;\n    emailSignInStart(email, password)  \n    \n  }  \n\n    return (\n      <div className=\"sign-in\">\n        <h2>I have already an account.</h2>\n        <span>Sign in with your email and password.</span>\n\n        <form onSubmit={handleSubmit}>\n          <FormInput type=\"email\" name=\"email\" value={userCredentials.email} handleChange={handleChange} label=\"Email\" required/>\n          <FormInput type=\"password\" name=\"password\" value={userCredentials.password} handleChange={handleChange} label=\"Password\" required/>                   \n          <div className=\"form-actions\">\n            <CustomButton type=\"submit\" variant=\"contained\">Sign In</CustomButton>\n            <CustomButton type=\"button\" variant=\"contained\" isGoogleSignIn onClick={googleSignInStart}>{\" \"} Sign In With Google</CustomButton>                  \n          </div>          \n        </form>\n      </div>\n    )\n  \n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart : () => dispatch(googleSignInStart()),\n  emailSignInStart : (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(withRouter(SignIn))\n"]},"metadata":{},"sourceType":"module"}